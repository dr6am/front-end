{"version":3,"sources":["components/Chart/chart-component.jsx","components/ScaleButtons/ScaleButtons.jsx","components/BigChart/BigChart-component.jsx","redux/data/data.types.js","redux/data/data.actions.js","components/SimpleTextCard/SimpleTextCard.jsx","App.js","serviceWorker.js","redux/data/data.reducer.js","redux/scale/scale.reducer.js","redux/root-reducer.js","redux/data/data.sagas.js","redux/root-saga.js","redux/store.js","index.js"],"names":["Card","styled","div","Title","h3","size","width","window","innerWidth","height","connect","state","data","scale","props","title","fill","dataKey","console","log","innerHeight","strokeDasharray","itemStyle","type","stroke","verticalAlign","strokeWidth","ScaleButtons","setActiveHandler","e","preventDefault","setState","activeId","target","id","setScale","document","getElementById","classList","remove","this","add","prevProps","prevState","snapshot","ScaleButtonsStyled","Sbtn","onClick","Component","dispatch","scaleType","payload","span","TopBar","DataActionTypes","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAILURE","FETCH_COUNT_SUCCESS","fetchDataFailure","errorMessage","dataActionTypes","Text","SubText","p","Textblock","SimpleCardComponent","subText","bounceAnimation","keyframes","fadeIn","BouncyDiv","App","dispatchData","ChartsBlock","ChartGrid","count","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","INITIAL_STATE","isFetching","undefined","dataReducer","action","load","scaleReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","persistReducer","fetchDataAsync","fetchDataStart","fetchCountAsync","fetchCountStart","dataSagas","fetch","response","json","put","message","takeLatest","all","call","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","save","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5c54bc50.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Area, AreaChart, CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis,} from 'recharts';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Card = styled.div`\r\n\tbackground: #fff;\r\n\twidth: max-content;\r\n\theight: max-content;\r\n\tpadding: 22px;\r\n\tmargin: 0 auto;\r\n\tborder-radius: 15px;\r\n\tbox-shadow: 0 0 17px rgba(0,0,0,0.7);\r\n`;\r\nconst Title = styled.h3`\r\n\tcolor: #000;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\t\r\n\tfont-size: 2em;\r\n\tpadding: 0 0 .6em;\r\n\tmargin: 0 3em 0  0 ;\r\n\tfont-family: Montserrat,sans-serif;\r\n\tfont-weight: 900;\r\n`;\r\nconst size = {\r\n\twidth: window.innerWidth>1024?((window.innerWidth / 1.129411764705882) - 44 * 3) / 3:window.innerWidth*0.85,\r\n\theight: window.innerWidth>1024?400:window.innerWidth*0.7// window.innerHeight>1024?200:400,\r\n};\r\nfunction Chart(props) {\r\n\tconst {data,title, fill,  dataKey} = props;\r\n\tconsole.log(window.innerHeight,window.innerWidth)\r\n\t//const data = sliceData(props.scale.id, props.data);\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t{fill && (<AreaChart\r\n\t\t\t\t{...size}\r\n\t\t\t\tdata={data}\r\n\t\t\t>\r\n\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\"/>\r\n\t\t\t\t<XAxis dataKey=\"date\"/>\r\n\t\t\t\t<YAxis/>\r\n\t\t\t\t<Tooltip itemStyle={{\"color\":\"#333;\"}}/>\r\n\t\t\t\t<Area type=\"monotone\" dataKey={dataKey} stroke=\"#222\" fill=\"#fff\"/>\r\n\t\t\t</AreaChart>)}\r\n\t\t\t{!fill && (<LineChart {...size}\r\n\t\t\t                      data={data}\r\n\t\t\t                     >\r\n\t\t\t\t<Legend verticalAlign=\"top\" height={36}/>\r\n\t\t\t\t<XAxis dataKey=\"date\"/>\r\n\t\t\t\t<YAxis/>\r\n\t\t\t\t<Tooltip itemStyle={{\"color\":\"#333;\"}}/>\r\n\t\t\t\t<Line type=\"monotone\" dataKey={dataKey} stroke=\"#222\" strokeWidth={2}/>\r\n\t\t\t</LineChart>)}\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tdata: state.data.data,\r\n\tscale:state.scale\r\n});\r\nexport default connect(mapStateToProps)(Chart);","import React, {Component} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\n\r\n class ScaleButtons extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tactiveId: props.scale.id\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.getElementById(\"1\").classList.remove('active');\r\n\t\tdocument.getElementById(\"2\").classList.remove('active');\r\n\t\tdocument.getElementById(\"3\").classList.remove('active');\r\n\t\tdocument.getElementById(this.state.activeId).classList.add('active');\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tdocument.getElementById(\"1\").classList.remove('active');\r\n\t\tdocument.getElementById(\"2\").classList.remove('active');\r\n\t\tdocument.getElementById(\"3\").classList.remove('active');\r\n\t\tdocument.getElementById(this.state.activeId).classList.add('active');\r\n\t}\r\n\t\r\n\tsetActiveHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst typeMap = [\"week\",\"month\",\"all\"];\r\n\t\tthis.setState({activeId:e.target.id});\r\n\t\tthis.props.setScale(e.target.id,typeMap[e.target.id-1])\r\n\t};\r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<ScaleButtonsStyled>\r\n\t\t\t\t<Sbtn id=\"1\" onClick={this.setActiveHandler}>Week</Sbtn>\r\n\t\t\t\t<Sbtn id=\"2\" onClick={this.setActiveHandler}>Month</Sbtn>\r\n\t\t\t\t<Sbtn id=\"3\" onClick={this.setActiveHandler}>All</Sbtn>\r\n\t\t\t</ScaleButtonsStyled>\r\n\t\t)\r\n\t}\r\n};\r\n const mapStateToProps = state=> ({\r\n\t scale: state.scale\r\n });\r\n const mapDispatchToProps = dispatch=>({\r\n\tsetScale:(id,scaleType)=>{\r\n\t\tdispatch({\r\n\t\t\ttype: \"SET_SCALE\",\r\n\t\t\tpayload: {id,scaleType}\r\n\t\t})\r\n\t}\r\n })\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ScaleButtons)\r\n\r\n\r\nconst ScaleButtonsStyled = styled.div`\r\n\tborder-radius: 12px;\r\n\tborder: #333 1px solid;\r\n\tcolor: #333;\r\n\tdisplay: flex;\r\n\theight: min-content;\r\n\twidth:max-content;\r\n\tpadding: 0;\r\n`;\r\nconst Sbtn = styled.span`\r\n\tbackground: none;\r\n\tpadding: .2em 1em;\r\n\ttransition: .3s all ease;\r\n\t\r\n\t:first-of-type{\r\n\t\tborder-right: 1px solid #333;\r\n\t\tborder-radius: 10px 0 0 10px;\r\n\t}\r\n\t:last-of-type{\r\n\t\tborder-left: 1px solid #333;\r\n\t\tborder-radius: 0 10px 10px 0;\r\n\t}\r\n\t:hover, &.active{\r\n\t\tbackground: #333;\r\n\t\tcolor: #fff;\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Area, AreaChart, Line, LineChart, Tooltip, XAxis, YAxis,} from 'recharts';\r\nimport ScaleChanger from '../ScaleButtons/ScaleButtons'\r\nimport {connect} from \"react-redux\";\r\nimport CartesianGrid from \"recharts/lib/cartesian/CartesianGrid\";\r\n\r\n\r\nconst Card = styled.div`\r\n\tbackground: #fff ;\r\n\twidth: max-content;\r\n\theight: max-content;\r\n\tpadding: 22px;\r\n\tborder-radius: 15px;\r\n\tbox-shadow: 0 0 17px rgba(0,0,0,0.7);\r\n\tmargin: auto;\r\n`;\r\nconst TopBar = styled.div`\r\n\tdisplay: flex;\r\n\t@media screen and (max-width: 1024px){\r\n\t\tflex-direction: column;\r\n\t\twidth: max-content;\r\n\t}\r\npadding-bottom: 10px;\r\n\theight: max-content;\r\n\tjustify-content: space-between;\r\n`;\r\nconst Title = styled.h3`\r\n\tcolor: #000;\r\n\tfont-size: 3em;\r\n\tpadding: 0 0 .6em;\r\n\tmargin: 0 0 0 .5em;\r\n\tfont-family: Montserrat,sans-serif;\r\n\tfont-weight: 900;\r\n`;\r\nconst size = {\r\n\twidth: window.innerWidth > 1024 ? ((window.innerWidth / 1.129411764705882) - 44 * 3)  : window.innerWidth * 0.84,\r\n\theight: window.innerWidth>1024?((window.innerWidth / 1.129411764705882) - 44 * 3) / 3:window.innerWidth*0.7\r\n};\r\n\r\nfunction BigChart(props) {\r\n\tconst {title, fill} = props;\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<TopBar>\r\n\t\t\t\t<Title>{title}</Title>\r\n\t\t\t\t<ScaleChanger/>\r\n\t\t\t</TopBar>\r\n\t\t\t{fill && (<AreaChart\r\n\t\t\t\t{...size}\r\n\t\t\t\tdata={props.data}\r\n\t\t\t>\r\n\t\t\t\t<CartesianGrid stroke=\"#eee\" strokeDasharray=\"2 2\"/>\r\n\t\t\t\t<XAxis dataKey=\"date\"/>\r\n\t\t\t\t<YAxis/>\r\n\t\t\t\t<Tooltip itemStyle={{\"color\": \"#333;\"}}/>\r\n\t\t\t\t<Area type=\"monotone\" dataKey=\"count\" stroke=\"#333\" fill=\"#fff\"/>\r\n\t\t\t\r\n\t\t\t</AreaChart>)}\r\n\t\t\t{!fill && (<LineChart {...size}\r\n\t\t\t                      data={props.data}\r\n\t\t\t>\r\n\t\t\t\t<XAxis dataKey=\"date\"/>\r\n\t\t\t\t<YAxis/>\r\n\t\t\t\t<Tooltip itemStyle={{\"color\": \"#333;\"}}/>\r\n\t\t\t\t<Line type=\"monotone\" dataKey=\"count\" stroke=\"#333\" strokeWidth={2}/>\r\n\t\t\t</LineChart>)}\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tscale: state.scale,\r\n\tdata: state.data.data,\r\n});\r\nexport default connect(mapStateToProps)(BigChart);","const DataActionTypes = {\r\n\tFETCH_DATA_START: 'FETCH_DATA_START',\r\n\tFETCH_DATA_SUCCESS: 'FETCH_DATA_SUCCESS',\r\n\tFETCH_DATA_FAILURE: 'FETCH_DATA_FAILURE',\r\n\t\r\n\tFETCH_COUNT_SUCCESS:'FETCH_COUNT_SUCCESS'\r\n};\r\n\r\nexport default DataActionTypes;\r\n","import dataActionTypes from './data.types';\r\n\r\n\r\nexport const fetchDataStart = () => ({\r\n\ttype: dataActionTypes.FETCH_DATA_START\r\n});\r\n\r\nexport const fetchDataSuccess = dataMap => ({\r\n\ttype: dataActionTypes.FETCH_DATA_SUCCESS,\r\n\tpayload: dataMap\r\n});\r\n\r\nexport const fetchDataFailure = errorMessage => ({\r\n\ttype: dataActionTypes.FETCH_DATA_FAILURE,\r\n\tpayload: errorMessage\r\n});\r\n\r\nexport const fetchCountSuccess = countMap =>({\r\n\ttype: dataActionTypes.FETCH_COUNT_SUCCESS,\r\n\tpayload: countMap\r\n})\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n\tbackground: #fff;\r\n\twidth: 28vw;\r\n\theight: 24vw;\r\n\tbox-sizing: border-box;\r\n\t@media screen and (max-width: 1024px){\r\n\t\twidth: 95vw;\r\n\t\tmargin: auto;\r\n\t\theight: 90vw;\r\n\t}\r\n\tpadding: 22px;\r\n\tborder-radius: 15px;\r\n\tbox-shadow: 0 0 17px rgba(0,0,0,0.7);\r\n`;\r\nconst Title = styled.h3`\r\n\twidth: 100%;\r\n\ttext-align: right;\r\n\tcolor: #232323;\r\n\tfont-size: 3em;\r\n\tpadding: 0 0 .6em;\r\n\tmargin-right: auto;\r\n\tfont-family: Montserrat,sans-serif;\r\n\tfont-weight: 900;\r\n`;\r\nconst Text = styled.span`\r\n\tcolor: #161616;\r\n\tfont-size: 6em;\r\n\tpadding: 0 0 .6em;\r\n\tmargin: 0  0 ;\r\n\t@media screen and (max-width: 1024px){\r\n\t\tfont-size: 4em;\r\n\t}\r\n\tfont-family: Montserrat,sans-serif;\r\n\tfont-weight: 900;\r\n`;\r\nconst SubText = styled.p`\r\n\tcolor: #a7a7a7;\r\n\tfont-size: 3em;\r\n\tpadding: 0 0 .6em;\r\n\tmargin: 0 0 0 .5em;\r\n\t@media screen and (max-width: 1024px){\r\n\t\tfont-size: 2em;\r\n\t}\r\n\tfont-family: Montserrat,sans-serif;\r\n\tfont-weight: 200;\r\n`;\r\nconst Textblock = styled.div`\r\n\tmargin-left: auto;\r\n\tdisplay: flex;\r\n\talign-items: baseline;\r\n\twidth: max-content;\r\n`\r\n\r\nfunction SimpleCardComponent(props) {\r\n\tconst {title, data} = props;\r\n\tconsole.log(props)\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t<Textblock>\r\n\t\t\t\t<Text>\r\n\t\t\t\t\t{data}\r\n\t\t\t\t</Text>\r\n\t\t\t\t<SubText>{props.subText ? props.subText : \"\"}</SubText>\r\n\t\t\t</Textblock>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\n\r\nexport default SimpleCardComponent;","import React, {Component, Fragment} from 'react';\nimport styled, {keyframes} from 'styled-components';\nimport {fadeIn} from 'react-animations';\n\nimport './App.css';\n\nimport Chart from './components/Chart/chart-component'\nimport BigChart from './components/BigChart/BigChart-component'\nimport {fetchDataStart} from \"./redux/data/data.actions\";\nimport {connect} from \"react-redux\";\nimport SimpleCardComponent from \"./components/SimpleTextCard/SimpleTextCard\";\n\n\nconst bounceAnimation = keyframes`${fadeIn}`;\n\nconst BouncyDiv = styled.div`\n  animation: 1s ${bounceAnimation};\n  box-sizing: border-box;\n  @media screen and (max-width: 1024px){\n\t\twidth: 100vw;\n\t\tmargin: auto;\n\t\theight: max-content;\n\t}\n`;\n\n//props.dispatchData()\nclass App extends Component {\n\t\n\tUNSAFE_componentWillMount() {\n\t\tthis.props.dispatchData()\n\t}\n\t\n\t\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<ChartsBlock>\n\t\t\t\t\t<BouncyDiv>\n\t\t\t\t\t\t<BigChart title={\"Using chart\"} />\n\t\t\t\t\t</BouncyDiv>\n\t\t\t\t\t<ChartGrid>\n\t\t\t\t\t\t<BouncyDiv>\n\t\t\t\t\t\t\t<Chart title={\"Errors chart\"} fill dataKey={\"count\"}/>\n\t\t\t\t\t\t</BouncyDiv>\n\t\t\t\t\t\t<BouncyDiv>\n\t\t\t\t\t\t\t<Chart title={\"New Users\"}  dataKey={\"userCount\"}/>\n\t\t\t\t\t\t</BouncyDiv>\n\t\t\t\t\t\t<BouncyDiv>\n\t\t\t\t\t\t\t<SimpleCardComponent title={\"Total count:\"} data={this.props.count} subText={\"users\"}/>\n\t\t\t\t\t\t</BouncyDiv>\n\t\t\t\t\t</ChartGrid>\n\t\t\t\t</ChartsBlock>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\n\nconst ChartsBlock = styled.div`\n  box-sizing: border-box;\n  height: max-content;\n  width: max-content;\n  margin: 3vh auto;\n`;\nconst ChartGrid = styled.div`\n\tmargin-top: 1em;\n\tdisplay: grid;\n  \tgrid-template-columns: 1fr 1fr 1fr;\n  \t@media screen and (max-width: 1024px){\n  \t\tgrid-template-columns: 1fr;\n  \t}\n  \t\n  \tgrid-gap:1em ;\n  \tmax-width: 90vw;\n`;\n\nconst mapDispatchToProps = dispatch=>({\n\tdispatchData:()=> dispatch(fetchDataStart())\n});\nconst mapStateToProps = state=>({\n\tcount:state.data.count\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.0/8 are considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\nexport function register(config) {\n\t/*\n\tconsole.error = () => {\n\t}\n\tconsole.warn = () => {\n\t}\n\tconsole.log = () => {\n\t}*/\n\t\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\t\t\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\t\t\t\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\t\t\t\t\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: {'Service-Worker': 'script'}\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import dataActionTypes from './data.types';\r\n\r\nconst INITIAL_STATE = {\r\n\tdata: null,\r\n\tcount:0,\r\n\tisFetching: false,\r\n\terror: undefined\r\n};\r\n\r\nconst dataReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase dataActionTypes.FETCH_DATA_START:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true\r\n\t\t\t};\r\n\t\tcase dataActionTypes.FETCH_DATA_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\tdata: action.payload\r\n\t\t\t};\r\n\t\tcase dataActionTypes.FETCH_COUNT_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: true,\r\n\t\t\t\tcount: action.payload\r\n\t\t\t};\r\n\t\tcase dataActionTypes.FETCH_DATA_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFetching: false,\r\n\t\t\t\terror: action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default dataReducer;\r\n","import { load } from \"redux-localstorage-simple\"\r\n\r\nconst INITIAL_STATE = load().scale?load().scale : {\r\n\tid: 3,\r\n\tscaleType:\"all\"\r\n};\r\n\r\nconst scaleReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SET_SCALE\":\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\t...action.payload\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default scaleReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport dataReducer from './data/data.reducer'\r\nimport scaleReducer from './scale/scale.reducer'\r\n\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n\twhitelist: []\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n\tscale: scaleReducer,\r\n\tdata: dataReducer\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","import { takeLatest, call, put, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n\tfetchDataSuccess,\r\n\tfetchDataFailure,\r\n\tfetchCountSuccess\r\n} from './data.actions';\r\n\r\nimport DataActionTypes from \"./data.types\";\r\n\r\nexport function* fetchDataAsync() {\r\n\ttry {\r\n\t\tconst json = yield fetch('https://statbotservis.glitch.me/last').then(response => response.json());\r\n\t\tyield put(fetchDataSuccess(json));\r\n\t} catch (error) {\r\n\t\tyield put(fetchDataFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* fetchDataStart() {\r\n\tyield takeLatest(\r\n\t\tDataActionTypes.FETCH_DATA_START,\r\n\t\tfetchDataAsync\r\n\t);\r\n}\r\nexport function* fetchCountAsync() {\r\n\ttry {\r\n\t\tconst json = yield fetch('https://statbotservis.glitch.me/count').then(response => response.json());\r\n\t\tyield put(fetchCountSuccess(json));\r\n\t} catch (error) {\r\n\t\tyield put(fetchDataFailure(error.message));\r\n\t}\r\n}\r\n\r\nexport function* fetchCountStart() {\r\n\tyield takeLatest(\r\n\t\tDataActionTypes.FETCH_DATA_START,\r\n\t\tfetchCountAsync\r\n\t);\r\n}\r\n\r\nexport function* dataSagas() {\r\n\tyield all([call(fetchDataStart),call(fetchCountStart)]);\r\n}\r\n","import {all} from 'redux-saga/effects';\r\nimport {dataSagas} from './data/data.sagas'\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([dataSagas()]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { save } from \"redux-localstorage-simple\"\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware,save()];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n\tmiddlewares.push(logger);\r\n}\r\n\r\n export const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nimport {persistor, store} from './redux/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<PersistGate persistor={persistor}>\n\t\t\t<App/>\n\t\t</PersistGate>\n\t</Provider>\n\t, document.getElementById('root'));\n\n\nserviceWorker.register();\n"],"sourceRoot":""}